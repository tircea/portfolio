import sqlite3
import pandas as pd
import numpy as np

# Підключаємося до бази даних SQLite
conn = sqlite3.connect('word_frequencies.db')
cursor = conn.cursor()

# Створення таблиць для 4 текстів у базі даних
cursor.execute('''CREATE TABLE IF NOT EXISTS text1 (
                    word TEXT PRIMARY KEY,
                    frequency INTEGER
                )''')

cursor.execute('''CREATE TABLE IF NOT EXISTS text2 (
                    word TEXT PRIMARY KEY,
                    frequency INTEGER
                )''')

cursor.execute('''CREATE TABLE IF NOT EXISTS text3 (
                    word TEXT PRIMARY KEY,
                    frequency INTEGER
                )''')

cursor.execute('''CREATE TABLE IF NOT EXISTS text4 (
                    word TEXT PRIMARY KEY,
                    frequency INTEGER
                )''')

# Дані для текстів (включаючи ВСІ слова і частоти з ваших списків)

# Текст 1: ЧСС Їжакове серце
text1_data = [
    ("А", 7), ('"', 6), ("де", 5), ("не", 4), ("З", 4), ("Тут", 3), ("і", 3), ("в", 3),
    ("там", 2), ("В", 2), ("очей", 2), ("він", 2), ("ти", 2), ("Їжакове", 2), ("серце", 2),
    ("Прощай", 2), ("пита", 1), ("втечеш", 1), ("зрозумієш", 1), ("смієш", 1), ("шукали", 1),
    ("попало", 1), ("Втекти", 1), ("попити", 1), ("продать", 1), ("промацують", 1),
    ("дише", 1), ("Є", 1), ("заробля", 1), ("пролягає", 1), ("Робить", 1), ("сидить", 1),
    ("сичить", 1), ("шерхне", 1), ("нетрі", 1), ("устах", 1), ("пальці", 1), ("позіхи", 1),
    ("світи", 1), ("кулак", 1), ("лак", 1), ("батечко", 1), ("внук", 1), ("їжак", 1),
    ("Кощій", 1), ("місяць", 1), ("нафталін", 1), ("сміх", 1), ("гаю", 1), ("діда", 1),
    ('"соком "', 1), ("зіниці", 1), ("ночей", 1), ("матінка", 1), ("наївність", 1),
    ("свіжість", 1), ("стежечка", 1), ("Вигадко", 1), ("криниці", 1), ("віспою", 1),
    ("грозою", 1), ("ранню", 1), ("губах", 1), ("клавішах", 1), ("дива", 1), ("царство", 1),
    ("добра", 1), ("тебе", 1), ("них", 1), ("найніжніше", 1), ("ожинним", 1), ("недобре", 1),
    ("хиже", 1), ("блідих", 1), ("пергаментних", 1), ("я", 1), ("якому", 1), ("все", 1),
    ("що", 1), ("кохання", 1), ("Святенництво", 1), ("нарешті", 1), ("сюди", 1),
    ("накладено", 1), ("вмиті", 1), ("готові", 1), ("кволі", 1), ("сизі", 1), ("терпкі", 1),
    ("благополучний", 1), ("вицвілих", 1), ("забута", 1), ("миловида", 1), ("пуста", 1),
    ("дріб'язковий", 1), ("недобрий", 1), ("побитий", 1), ("старечий", 1), ("сухіший", 1),
    ("на", 1), ("По", 1), ("біля", 1), ("від", 1), ("з", 1), ("цебто", 1), ("ще", 1),
    ("як", 1), ("твоя", 1), ("той", 1), ("цей", 1), ("моє", 1), ("це", 1), ("отих", 1),
    ("На", 1), ("два", 1), ("Один", 1), ("Скільки", 1), ("його", 1), ("Ось", 1), ("Таж", 1),
    ("чи", 1)
]

# Текст 2: ЧСС Балада повернення
text2_data = [
    ("І", 7), ("у", 3), ("А", 3), ("не", 3), ("чоловік", 3), ("Приймав", 2), ("було", 2),
    ("й", 2), ("з", 2), ("нічого", 2), ("вже", 1), ("все", 1), ("дивно", 1), ("довго", 1),
    ("зболено", 1), ("іще", 1), ("металеве", 1), ("Повільно", 1), ("чого", 1), ("яким", 1),
    ("свої", 1), ("якомусь-таки", 1), ("за", 1), ("про", 1), ("на", 1), ("з-під", 1), ("як", 1),
    ("скільки", 1), ("три", 1), ("ж", 1), ("нібито", 1), ("чи", 1), ("кричало", 1),
    ("горбився", 1), ("дивився", 1), ("Спинивсь", 1), ("пахне", 1), ("плаче", 1), ("люди", 1),
    ("дубочки-нелині", 1), ("вітер", 1), ("в'яз", 1), ("струмок", 1), ("цвинтар", 1),
    ("Скрипів", 1), ("Стояв", 1), ("пахла", 1), ("пригасала", 1), ("ворушачи", 1),
    ("Стрічалися", 1), ("шамріли", 1), ("нетутешні", 1), ("втомлений", 1), ("дуплавий", 1),
    ("похилий", 1), ("туманний", 1), ("отчого", 1), ("отчим", 1), ("хрестаті", 1), ("старе", 1),
    ("дитячим", 1), ("Юначним", 1), ("Вертав", 1), ("взяв", 1), ("витерпів", 1), ("задзвенів", 1),
    ("мовив", 1), ("оглянув", 1), ("хортам", 1), ("дому", 1), ("снігу", 1), ("суму", 1),
    ("домом", 1), ("Жалем", 1), ("Стогоном", 1), ("зайцями", 1), ("грудку", 1), ("Балада", 1),
    ("згадка", 1), ("Зоря", 1), ("матері", 1), ("радості", 1), ("чужини", 1), ("усмішкою", 1),
    ("руки", 1), ("ферми", 1), ("зморшках", 1), ("село", 1), ("повернення", 1), ("чоло", 1),
    ("деревам", 1), ("полегшенні", 1), ("полі", 1), ("узліссі", 1), ("повернення", 1),
    ("Відлунням", 1), ("моря", 1), ("йому", 1), ("неї", 1), ("він", 1)
]

# Текст 3: ЧСС Прикмети (додано решту слів)
text3_data = [
    ("і", 9), ("на", 7), ("в", 5), ("як", 5), ("й", 4), ("Як", 4), ("Але", 3), ("ж", 3), ("Не", 3),
    ("тобі", 2), ("для", 2), ("у", 2), ("А", 2), ("усе", 2), ("Чуєш", 2), ("діди", 2),
    ("так", 2), ('"', 2), ("уміли", 2), ("дощ", 2), ("погоду", 2), ("людині", 1), ("гір", 1),
    ("криниць", 1), ("прикмет", 1), ("вода", 1), ("користь", 1), ("ластівка", 1), ("мова", 1),
    ("росиця", 1), ("ластівко", 1), ("Вербам", 1), ("мові", 1), ("природі", 1), ("землі", 1),
    ("каламуті", 1), ("луною", 1), ("хмари", 1), ("прикметах", 1), ("травах", 1), ("дерева", 1),
    ("повір'я", 1), ("листя", 1), ("сонце", 1), ("гніздечка", 1), ("знання", 1), ("серця", 1),
    ("вухом", 1), ("оком", 1), ("лад", 1), ("народ", 1), ("склад", 1), ("степ", 1),
    ("верхоглядів-онуків", 1), ("глузд", 1), ("дуб", 1), ("камінь", 1), ("квіт", 1),
    ("Пломінь", 1), ("сокіл", 1), ("грунті", 1), ("народі", 1), ("бджоли", 1), ("кралечки", 1),
    ("криниці", 1), ("Прикмети", 1), ("трави", 1), ("хмари", 1), ("весну", 1), ("жменю", 1),
    ("могилу", 1), ("пасіку", 1), ("поменшало", 1), ("видніються", 1), ("Переводяться", 1),
    ("бачить", 1), ("копать", 1), ("посіяти", 1), ("скосить", 1), ("слухать", 1),
    ("пеленався", 1), ("бемкають", 1), ("вертають", 1), ("Глухнуть", 1), ("знаходять", 1),
    ("літають", 1), ("Набрякають", 1), ("умирають", 1), ("виросте", 1), ("говорить", 1),
    ("несе", 1), ("потіє", 1), ("стоїть", 1), ("сходить", 1), ("пахощі", 1), ("устах", 1),
    ("верхи", 1), ("всевіди-діди", 1), ("Дзвони", 1), ("круглі", 1), ("настояні", 1),
    ("добрих", 1), ("несмачна", 1), ("перша", 1), ("здоровий", 1), ("живлющій", 1),
    ("зіркій", 1), ("чуткій", 1), ("пісному", 1), ("живе", 1), ("мудре", 1), ("мудрим", 1),
    ("ясним", 1), ("найкоштовніших", 1), ("вслухаєшся", 1), ("буде", 1), ("питиме", 1),
    ("виходиш", 1), ("дишеш", 1), ("тепло", 1), ("хутко", 1), ("часто", 1), ("червоно", 1),
    ("чітко", 1), ("криничарі", 1), ("лилики", 1), ("віддарунок", 1), ("вітер", 1),
    ("віддається", 1), ("втрачається", 1), ("гнеться", 1), ("призабувається", 1), ("пах", 1),
    ("була", 1), ("засліпли", 1), ("казали", 1), ("криючись", 1), ("мовили", 1),
    ("розрізняли", 1), ("що", 1), ("Щось", 1), ("них", 1), ("багато", 1), ("важко", 1),
    ("вчасно", 1), ("густо", 1), ("де", 1), ("довго", 1), ("запізно", 1), ("здалеку", 1),
    ("зрана", 1), ("іноді", 1), ("легко", 1), ("надворі", 1), ("по-своєму", 1),
    ("приміром", 1), ("просто", 1), ("сухо", 1), ("його", 1), ("ну", 1), ("лиш", 1),
    ("на", 1), ("Наче", 1), ("то", 1), ("О", 1), ("у", 1), ("без", 1), ("від", 1), ("Все", 1),
    ("те", 1), ("за", 1), ("свій", 1), ("всяка", 1), ("все", 1), ("своїм", 1), ("отих", 1),
    ("тих", 1)
]

# Текст 4: ЧСС Лилики
text4_data = [
    ("Лилики", 3), ("Хто", 3), ("в", 3), ("Над", 3), ("і", 3), ("та", 2), ("Про", 2), ("Як", 2),
    ("те", 2), ('"', 2), ("мрійна", 1), ("Мудрий", 1), ("туманнім", 1), ("бридке", 1), ("ніжне", 1),
    ("проникнеш", 1), ("думав", 1), ("прозвав", 1), ("Темнів", 1), ("лили", 1), ("літали", 1),
    ("нуряться", 1), ("збагнуть", 1), ("зорять", 1), ("пахнуть", 1), ("пурхають", 1),
    ("згорне", 1), ("любить", 1), ("навче", 1), ("напише", 1), ("сон", 1), ("сувій", 1),
    ("мотоцикл", 1), ("повечірок", 1), ("час", 1), ("народе-ласкавче", 1), ("екрані", 1),
    ("характері", 1), ("ліку", 1), ("світом", 1), ("кажанів", 1), ("срібляки", 1), ("Матіоли", 1),
    ("загадок", 1), ("душа", 1), ("мові", 1), ("Вікна", 1), ("Сузір'я", 1), ("повітрі", 1),
    ("дитинством", 1), ("селом", 1), ("що", 1), ("десь", 1), ("добраніч", 1), ("лагідно", 1),
    ("м'яко", 1), ("Певно", 1), ("так", 1), ("твоїй", 1), ("оцим", 1), ("моїм", 1), ("у", 1),
    ("я", 1), ("й", 1), ("лиш", 1), ("хіба", 1), ("О", 1), ("мов", 1), ("немов", 1), ("по", 1),
    ("без", 1), ("й", 1)
]

# Додавання даних до таблиць
cursor.executemany('INSERT OR REPLACE INTO text1 (word, frequency) VALUES (?, ?)', text1_data)
cursor.executemany('INSERT OR REPLACE INTO text2 (word, frequency) VALUES (?, ?)', text2_data)
cursor.executemany('INSERT OR REPLACE INTO text3 (word, frequency) VALUES (?, ?)', text3_data)
cursor.executemany('INSERT OR REPLACE INTO text4 (word, frequency) VALUES (?, ?)', text4_data)

# Зберігаємо зміни
conn.commit()

# Функція для об'єднання таблиць і збереження результатів
def merge_text_tables(text_a, text_b, table_name):
    query_a = f"SELECT * FROM {text_a}"
    query_b = f"SELECT * FROM {text_b}"
    
    df_a = pd.read_sql(query_a, conn)
    df_b = pd.read_sql(query_b, conn)
    
    # Об'єднання таблиць
    df_merged = pd.merge(df_a, df_b, on='word', how='outer', suffixes=(f'_{text_a}', f'_{text_b}'))
    
    # Заповнюємо пропущені значення 0
    df_merged.fillna(0, inplace=True)
    
    # Додаємо стовпець для абсолютної частоти
    df_merged['Абсолютна частота'] = df_merged[f'frequency_{text_a}'] + df_merged[f'frequency_{text_b}']
    
    # Сортуємо за абсолютною частотою та алфавітом
    df_merged = df_merged.sort_values(by=['Абсолютна частота', 'word'], ascending=[False, True])
    
    # Зберігаємо об'єднану таблицю у базі даних
    df_merged.to_sql(table_name, conn, if_exists='replace', index=False)

# Створення таблиць для всіх пар текстів
merge_text_tables('text1', 'text2', 'merged_text1_text2')
merge_text_tables('text1', 'text3', 'merged_text1_text3')
merge_text_tables('text1', 'text4', 'merged_text1_text4')
merge_text_tables('text2', 'text3', 'merged_text2_text3')
merge_text_tables('text2', 'text4', 'merged_text2_text4')
merge_text_tables('text3', 'text4', 'merged_text3_text4')

# Функція для обчислення евклідової відстані
def euclidean_distance(A, B):
    return np.sqrt(np.sum((A - B) ** 2))

# Функція для обчислення косинусної схожості
def cosine_similarity(A, B):
    dot_product = np.dot(A, B)
    norm_a = np.linalg.norm(A)
    norm_b = np.linalg.norm(B)
    if norm_a == 0 or norm_b == 0:
        return 0
    return dot_product / (norm_a * norm_b)

# Функція для обчислення відстані Жаккара
def jaccard_similarity(A, B):
    intersection = np.minimum(A, B).sum()
    union = np.maximum(A, B).sum()
    if union == 0:
        return 0
    return intersection / union

# Функція для обчислення відстані Жаккара
def jaccard_distance(A, B):
    similarity = jaccard_similarity(A, B)
    return 1 - similarity

# Функція для підготовки векторів і обчислення всіх метрик
def calculate_metrics(text_a, text_b):
    query_a = f"SELECT * FROM {text_a}"
    query_b = f"SELECT * FROM {text_b}"
    
    df_a = pd.read_sql(query_a, conn)
    df_b = pd.read_sql(query_b, conn)
    
    # Об'єднання таблиць і заповнення пропущених значень 0
    df_merged = pd.merge(df_a, df_b, on='word', how='outer', suffixes=(f'_{text_a}', f'_{text_b}'))
    df_merged.fillna(0, inplace=True)

    # Створюємо вектори частот
    A = df_merged[f'frequency_{text_a}'].values
    B = df_merged[f'frequency_{text_b}'].values
    
    # Обчислюємо евклідову відстань
    euclidean_dist = euclidean_distance(A, B)
    # Обчислюємо косинусну схожість
    cosine_sim = cosine_similarity(A, B)
    # Обчислюємо подібність Жаккара
    jaccard_sim = jaccard_similarity(A, B)
    # Обчислюємо відстань Жаккара
    jaccard_dist = jaccard_distance(A, B)
    
    print(f"Схожість Жаккара між {text_a} і {text_b}: {jaccard_sim:.2f}")
    print(f"Відстань Жаккара між {text_a} і {text_b}: {jaccard_dist:.2f}")
    print(f"Евклідова відстань між {text_a} і {text_b}: {euclidean_dist:.2f}")
    print(f"Косинусна схожість між {text_a} і {text_b}: {cosine_sim:.2f}")

# Обчислюємо евклідову відстань, косинусну схожість і подібність Жаккара для всіх пар текстів
calculate_metrics('text1', 'text2')
calculate_metrics('text1', 'text3')
calculate_metrics('text1', 'text4')
calculate_metrics('text2', 'text3')
calculate_metrics('text2', 'text4')
calculate_metrics('text3', 'text4')

# Закриваємо з'єднання з базою даних
conn.close()